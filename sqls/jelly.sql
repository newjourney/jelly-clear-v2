/*
 Source Host           : 127.0.0.1:3306
 Source Schema         : jelly
*/
DROP TABLE IF EXISTS `t_s_board`;
CREATE TABLE `t_s_board` (
  `Level` int(11) unsigned NOT NULL COMMENT '关卡等级',
  `Board` varchar(127) DEFAULT NULL COMMENT '初始棋盘布局',
  PRIMARY KEY (`Level`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='各个关卡等级的初始棋盘布局';

INSERT INTO `t_s_board` VALUES (1, 'SHHBBVVHSSHBVSBVHVSBSVSSVHBBSBBBHVHHBHSVSVSSBVBSHBHVHBSBVHHHHHBV');
INSERT INTO `t_s_board` VALUES (2, 'HBSHHHBHHVVVVVHHVHHSHSVHHSHHVSBBSVVSVVVSSSHSHHVVVSBBVBHVSHBVBVBB');
INSERT INTO `t_s_board` VALUES (3, 'BHHBHSBVBHSBBSHVSSBVBBVVVHHVBHHHBSHHVSBVBVHBHBHHSSHVBVBVBSSHHVVB');
INSERT INTO `t_s_board` VALUES (4, 'SSBVBHHSSSHSBVHSVSSHVSBBBSVSSVSSBBHHSVBSSSBHSHHVSHVHBVVSVVVVBBVH');
INSERT INTO `t_s_board` VALUES (5, 'BHBHBBHBHVSBHSBBHBHSVHSHHSSHSSBVHVBHVBVSSHHVVVVSBHSVBVBBSVVSHBHS');
INSERT INTO `t_s_board` VALUES (6, 'HSSSHHHSVHSSSSHSBHHSBHSHBBVHBBBVVVVSSVVHSSSVVSSVSVBVSSBSVVBVBBHS');
INSERT INTO `t_s_board` VALUES (7, 'SVBBBBVSHHHVBHVVHSBVSSVBHHBSBHBVVSHSBVBHHSVBHSVSVSVHSVSHSVBBHHBB');
INSERT INTO `t_s_board` VALUES (8, 'SHBVHVVVVSBHHHHVSHVHBSBBBSSBBBHSSHBSBVVBBBVHVHVBVHBVBVHBBBBVSVVS');
INSERT INTO `t_s_board` VALUES (9, 'HBVHVHBBSBHHHSHBBBBVHBSSBBVSSHBBSVSVBVHBBVVBVSHSHHBBSHHBSHVSSHSS');
INSERT INTO `t_s_board` VALUES (10, 'HSVBVHSBVHBVBSSVVBBSSBHVHVHVBVSHVVSBBVBHBSBBSSVSHBVHSSBBSSBHHBSV');

DROP TABLE IF EXISTS `t_u_lock`;
CREATE TABLE `t_u_lock` (
  `SessionId` varchar(32) NOT NULL COMMENT '会话ID',
  `UpdateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT ' 更新时间',
  PRIMARY KEY (`SessionId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS `t_u_player`;
CREATE TABLE `t_u_player` (
  `SessionId` varchar(32) NOT NULL DEFAULT '' COMMENT '会话ID',
  `Board` varchar(127) DEFAULT NULL COMMENT '棋盘布局',
  PRIMARY KEY (`SessionId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='玩家对应的棋盘布局';

-- ----------------------------
-- 通过存储过程, 清理过期的lock
-- ----------------------------
DROP PROCEDURE IF EXISTS `clear_expired_lock`;
delimiter ;;
CREATE PROCEDURE `jelly`.`clear_expired_lock`()
begin
	delete from t_u_lock where UpdateTime < timestampadd(second, -30, current_timestamp());
end
;;
delimiter ;

-- ----------------------------
-- 创建event, 定时调用上述存储过程
-- ----------------------------
DROP EVENT IF EXISTS `e_clear_expired_lock`;
delimiter ;;
CREATE EVENT `jelly`.`e_clear_expired_lock`
ON SCHEDULE
EVERY '2' MINUTE STARTS '2019-05-19 10:00:00'
ON COMPLETION PRESERVE
DO BEGIN 
	call clear_expired_lock();
END
;;
delimiter ;

SET FOREIGN_KEY_CHECKS = 1;
